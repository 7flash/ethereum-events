import { ReactiveVar } from 'meteor/reactive-var';
const ethjsabi = require('ethjs-abi');

var abi = [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_gender","type":"string"}],"name":"SetGender","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"string"}],"name":"SetName","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"dateOfBirth","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"gender","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_dateOfBirth","type":"string"}],"name":"SetDateOfBirth","outputs":[],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"what","type":"string"}],"name":"PatientChanged","type":"event"}];

var patient_patientContract = web3.eth.contract(abi);

var patientInstance;

var patientAddress = new ReactiveVar("0xdd9cbb3ac602ca21d60d63008b2130500a908652");
var status = new ReactiveVar("Invalid");

function create() {
  status.set("Creating");
  var p = new Promise((resolve, reject) => {
    patientInstance = patient_patientContract.new(
       {
         from: web3.eth.accounts[0],
         data: '0x6060604052341561000c57fe5b5b6107858061001c6000396000f30060606040523615610076576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100785780633a50da92146101115780634df9dcd31461016b578063615dac4e146101c557806379caad861461025e578063af396a59146102f7575bfe5b341561008057fe5b610088610351565b60405180806020018281038252838181518152602001915080519060200190808383600083146100d7575b8051825260208311156100d7576020820191506020810190506020830392506100b3565b505050905090810190601f1680156101035780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561011957fe5b610169600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506103ef565b005b341561017357fe5b6101c3600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610472565b005b34156101cd57fe5b6101d56104f5565b6040518080602001828103825283818151815260200191508051906020019080838360008314610224575b80518252602083111561022457602082019150602081019050602083039250610200565b505050905090810190601f1680156102505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561026657fe5b61026e610593565b60405180806020018281038252838181518152602001915080519060200190808383600083146102bd575b8051825260208311156102bd57602082019150602081019050602083039250610299565b505050905090810190601f1680156102e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102ff57fe5b61034f600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610631565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b505050505081565b80600290805190602001906104059291906106b4565b507fab72c9af5e67564b719c4b25f885f282de2d5bbb4dbad14d3eb50f7854431e5f6040518080602001828103825260068152602001807f67656e646572000000000000000000000000000000000000000000000000000081525060200191505060405180910390a15b50565b80600090805190602001906104889291906106b4565b507fab72c9af5e67564b719c4b25f885f282de2d5bbb4dbad14d3eb50f7854431e5f6040518080602001828103825260048152602001807f6e616d650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390a15b50565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b505050505081565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106295780601f106105fe57610100808354040283529160200191610629565b820191906000526020600020905b81548152906001019060200180831161060c57829003601f168201915b505050505081565b80600190805190602001906106479291906106b4565b507fab72c9af5e67564b719c4b25f885f282de2d5bbb4dbad14d3eb50f7854431e5f60405180806020018281038252600b8152602001807f646174654f66426972746800000000000000000000000000000000000000000081525060200191505060405180910390a15b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106f557805160ff1916838001178555610723565b82800160010185558215610723579182015b82811115610722578251825591602001919060010190610707565b5b5090506107309190610734565b5090565b61075691905b8082111561075257600081600090555060010161073a565b5090565b905600a165627a7a723058208ba7a2917dddcc99ce8c563df7da1679456f03aa7eb4b5b21db31374dd3321d70029',
         gas: '4700000'
       }, function (e, contract){
         if(e) {
           reject(e);
           return;
         }
        if (typeof contract.address !== 'undefined') {
          //console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
          resolve(contract);
          status.set("Valid");
          patientAddress.set(contract.address);
        }
     });
  });

  return p;
}

function at(address) {
  patientInstance = patient_patientContract.at(address);
  status.set("Valid");
  return patientInstance;
}

function decodePatientChangedEvent(data) {
  var de = ethjsabi.decodeEvent(abi[2], data);
  return de;
}

export default {
    abi: abi,
    contract: patient_patientContract,
    instance: function() {return patientInstance;},
    create: create,
    at: at,
    address: patientAddress,
    status: status,
    decodePatientChangedEvent : decodePatientChangedEvent
}
